// Code generated by GoComply XSD2Go for Moov; DO NOT EDIT.
// Models for urn:iso:std:iso:20022:tech:xsd:admi.007.001.01
package admi_007_001_01

import (
	"encoding/xml"

	"github.com/moov-io/fedwire20022/pkg/fedwire"
)

// XSD Elements

type Document struct {
	XMLName xml.Name

	RctAck ReceiptAcknowledgementV01 `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 RctAck"`
}

// XSD ComplexType declarations

type GenericIdentification36 struct {
	Id      Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 Id"`
	Issr    Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 Issr"`
	SchmeNm *Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 SchmeNm,omitempty"`
}

type MessageHeader10 struct {
	MsgId   Max35Text            `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 MsgId"`
	CreDtTm *fedwire.ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 CreDtTm,omitempty"`
	QryNm   *Max35Text           `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 QryNm,omitempty"`
}

type MessageReference1 struct {
	Ref     Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 Ref"`
	MsgNm   *Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 MsgNm,omitempty"`
	RefIssr *PartyIdentification136 `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 RefIssr,omitempty"`
}

type NameAndAddress5 struct {
	Nm  Max350Text      `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 Nm"`
	Adr *PostalAddress1 `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 Adr,omitempty"`
}

type PartyIdentification120Choice struct {
	AnyBIC   *AnyBICDec2014Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 AnyBIC,omitempty"`
	PrtryId  *GenericIdentification36 `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 PrtryId,omitempty"`
	NmAndAdr *NameAndAddress5         `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 NmAndAdr,omitempty"`
}

type PartyIdentification136 struct {
	Id  PartyIdentification120Choice `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 Id"`
	LEI *LEIIdentifier               `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 LEI,omitempty"`
}

type PostalAddress1 struct {
	AdrTp       *AddressType2Code `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 AdrTp,omitempty"`
	AdrLine     []*Max70Text      `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 AdrLine,omitempty"`
	StrtNm      *Max70Text        `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 StrtNm,omitempty"`
	BldgNb      *Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 BldgNb,omitempty"`
	PstCd       *Max16Text        `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 PstCd,omitempty"`
	TwnNm       *Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 TwnNm,omitempty"`
	CtrySubDvsn *Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 CtrySubDvsn,omitempty"`
	Ctry        CountryCode       `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 Ctry"`
}

type ReceiptAcknowledgementReport2 struct {
	RltdRef MessageReference1 `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 RltdRef"`
	ReqHdlg RequestHandling2  `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 ReqHdlg"`
}

type ReceiptAcknowledgementV01 struct {
	MsgId       MessageHeader10                 `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 MsgId"`
	Rpt         []ReceiptAcknowledgementReport2 `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 Rpt"`
	SplmtryData []*SupplementaryData1           `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 SplmtryData,omitempty"`
}

type RequestHandling2 struct {
	StsCd   Max4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 StsCd"`
	StsDtTm *fedwire.ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 StsDtTm,omitempty"`
	Desc    *Max140Text          `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 Desc,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm *Max350Text                `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:admi.007.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

// XSD SimpleType declarations

type AddressType2Code string

const AddressType2CodeAddr AddressType2Code = "ADDR"
const AddressType2CodePbox AddressType2Code = "PBOX"
const AddressType2CodeHome AddressType2Code = "HOME"
const AddressType2CodeBizz AddressType2Code = "BIZZ"
const AddressType2CodeMlto AddressType2Code = "MLTO"
const AddressType2CodeDlvy AddressType2Code = "DLVY"

type AnyBICDec2014Identifier string

type CountryCode string

type LEIIdentifier string

type Max140Text string

type Max16Text string

type Max350Text string

type Max35Text string

type Max4AlphaNumericText string

type Max70Text string
