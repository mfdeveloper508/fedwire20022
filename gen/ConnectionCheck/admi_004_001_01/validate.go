// Code generated by GoComply XSD2Go for Moov; DO NOT EDIT.
// Validations for urn:iso:std:iso:20022:tech:xsd:admi.004.001.01
package admi_004_001_01

import (
	"github.com/moov-io/base"
	"github.com/moov-io/fedwire20022/pkg/fedwire"
)

// XSD Element validations

func (v Document) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	baseName := "Document"
	fedwire.AddError(&errs, baseName+".Admi00400101", v.Admi00400101.Validate())
	if errs.Empty() {
		return nil
	}
	return errs
}

// XSD ComplexType validations

func (v Event1) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	baseName := "Event1"
	fedwire.AddError(&errs, baseName+".EvtCd", v.EvtCd.Validate())
	if v.EvtParam != nil {
		for indx := range v.EvtParam {
			fedwire.AddError(&errs, baseName+".EvtParam", v.EvtParam[indx].Validate())
		}
	}
	if v.EvtDesc != nil {
		fedwire.AddError(&errs, baseName+".EvtDesc", v.EvtDesc.Validate())
	}
	if v.EvtTm != nil {
		fedwire.AddError(&errs, baseName+".EvtTm", v.EvtTm.Validate())
	}
	if errs.Empty() {
		return nil
	}
	return errs
}

func (v Admi00400101) Validate() error {
	var errs base.ErrorList = base.ErrorList{}
	baseName := "Admi00400101"
	fedwire.AddError(&errs, baseName+".EvtInf", v.EvtInf.Validate())
	if errs.Empty() {
		return nil
	}
	return errs
}

// XSD SimpleType validations

func (v Max350Text) Validate() error {
	if err := fedwire.ValidateMinLength(string(v), 1); err != nil {
		return err
	}
	if err := fedwire.ValidateMaxLength(string(v), 350); err != nil {
		return err
	}
	return nil
}

func (v Max35Text) Validate() error {
	if err := fedwire.ValidateMinLength(string(v), 1); err != nil {
		return err
	}
	if err := fedwire.ValidateMaxLength(string(v), 35); err != nil {
		return err
	}
	return nil
}

func (v Max4AlphaNumericText) Validate() error {
	if err := fedwire.ValidatePattern(string(v), `[a-zA-Z0-9]{1,4}`); err != nil {
		return err
	}
	if err := fedwire.ValidateMinLength(string(v), 1); err != nil {
		return err
	}
	if err := fedwire.ValidateMaxLength(string(v), 4); err != nil {
		return err
	}
	return nil
}
